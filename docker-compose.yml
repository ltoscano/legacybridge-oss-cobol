services:
  # Main COBOL Migration service
  cobol-migration:
    build:
      context: .
      dockerfile: Dockerfile.pip
    container_name: cobol-migration
    env_file:
      - .env
    environment:
      # Override paths for Docker container
      - COBOL_SOURCE_FOLDER=/app/data/cobol-source
      - JAVA_OUTPUT_FOLDER=/app/data/java-output
      - LOGS_FOLDER=/app/data/logs
    volumes:
      # Mount directories for persistent data
      - ./data/cobol-source:/app/data/cobol-source
      - ./data/java-output:/app/data/java-output
      - ./data/logs:/app/data/logs
      # Mount configuration files to speed up configuration
      - ./config:/app/config
    working_dir: /app
    command: ["tail", "-f", "/dev/null"]  # Keep container running for interactive use
    networks:
      - cobol-migration-network
    restart: unless-stopped


  # Web interface (future enhancement) - COMMENTED OUT UNTIL IMPLEMENTED
  # cobol-migration-web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.pip
  #   container_name: cobol-migration-web
  #   environment:
  #     - COBOL_SOURCE_FOLDER=/app/data/cobol-source
  #     - JAVA_OUTPUT_FOLDER=/app/data/java-output
  #     - LOGS_FOLDER=/app/data/logs
  #   volumes:
  #     # Mount source code for development (avoid rebuilds)
  #     - ./cobol_migration_agents:/app/cobol_migration_agents
  #     - ./README.md:/app/README.md:ro
  #     - ./pyproject.toml:/app/pyproject.toml:ro
  #     - ./setup.py:/app/setup.py:ro
  #     # Mount directories for persistent data
  #     - ./data:/app/data
  #     - ./config:/app/config:ro
  #   ports:
  #     - "8000:8000"
  #   networks:
  #     - cobol-migration-network
  #   restart: unless-stopped
  #   profiles:
  #     - web
  #   command: ["python", "-m", "uvicorn", "cobol_migration_agents.web:app", "--host", "0.0.0.0", "--port", "8000"]

networks:
  cobol-migration-network:
    driver: bridge

volumes:
  cobol_data:
    driver: local